@model Web.Models.ArticleEditViewModel
@{
    ViewBag.Title = "記事を編集";
}

@{
    Layout = "../Shared/_BaseLayout.cshtml";
}

@section CSS{
    <meta http-equiv="X-FRAME-OPTIONS" content="SAMEORIGIN" />
    <link href="~/Content/css/Edit/header.css" rel="stylesheet" />
    <link href="~/Content/css/Edit/index.css" rel="stylesheet" />
    <link href="~/Content/css/Novel/novel-editor.css" rel="stylesheet" />
    <link href="~/Content/css/Novel/Markup.css" rel="stylesheet" />
    <link href="~/Content/css/Markup.css" rel="stylesheet" />
    <link href="~/Content/css/Home/viewarticle.css" rel="stylesheet" />
}

@section JS
{
    <script src="~/Scripts/collections.js"></script>
    <script src="~/Scripts/caret-util.js"></script>
    <script src="~/Scripts/underscore.js"></script>
    <script src="~/Scripts/Novel/Markups.js"></script>
    <script src="~/Scripts/Edit/EditPage.js"></script>
    <script src="~/Scripts/Novel/novel-editor.js"></script>
    <script src="~/Scripts/Utility/AspectRatioStretcher.js"></script>
    <script src="~/Scripts/Utility/HeightStretcher.js"></script>
    <script src="~/Scripts/Edit/Edit-autoHeight.js"></script>
    @*<script src="~/Scripts/Edit/Edit-autoMargin-left.js"></script>*@
    <script src="~/Scripts/Edit/TagMaker.js"></script>
    <script src="~/Scripts/Novel/sizing.js"></script>
}

@*
    .edit-bg-overlay
      %header
      .edit-title-container
      .edit-title-chkvalid
      .edit-tag-container
      .edit-preview-container
        .edit-preview.preview-body
      .edit-text-container
      %footer
*@


<div class="edit-bg-overlay">
        @using (Html.BeginForm("Index", "Edit", FormMethod.Post, new {@class = "edit-form editpage-main", enctype = "multipart/form-data"}))
         {
             <div class="edit-title-container">
                 <input type="text" name="Title" value="@(Model == null ? "" : Model.Title)" id="title" class="edit-title" placeholder="タイトル" @(Model != null ? "readonly" : "") />
             </div>
             <div class="edit-title-chkvalid"></div>
             <div class="edit-tag-container">
                 <input type="text" id="tag" class="edit-tag" placeholder="タグ" value="@(Model == null ? "" : Model.Tags)">
                 <div class="edit-tag-chkvalid"></div>
             </div>
             <div class="edit-editted-box"></div>

             //リアルタイムプレビュー
             <div class="wrapper">
                 <div class="edit-preview-container">
                     <div>プレビュー</div>
                     <div class="edit-preview-container-inner article-container">
                         <div class="edit-preview preview-body"></div>
                         <div class="preview-iframes"></div>
                     </div>
                 </div>


                 <div class="edit-text-container">
                     <h1>編集</h1>
                     <textarea class="edit-text edit-context" placeholder="textarea">
                    @if (Model != null)
                    {
                        @Html.Raw(Model.MarkupString)
                    }
</textarea>@*この行にはスペースを作らないこと*@
                 </div>
             </div>
             @Html.AntiForgeryToken()
             @Html.Hidden("Tag", "", new {id = "hidden-tag"})
             @Html.Hidden("Body", "", new {id = "hidden-body"})
             @Html.Hidden("Markup", "", new {id = "hidden-markup"})
             @Html.Hidden("Mode", Model == null ? "new" :Model.EditMode, new {id = "hidden-mode"})
             <span class="prev-switch">大きくする→</span>
             <div class="select-thumbnail">サムネイルの選択<input type="file" name="Thumbnail" class="thumbnail"/></div>
             if (Model != null)
             {
                 @Html.Hidden("Id", Model.ArticleId)
             }
             <div class="edit-button-container">
                 <a class="preview-button">プレビュー表示</a>
                 <a class="edit-submit-button">投稿する</a>
             </div>
         
    }
</div>
